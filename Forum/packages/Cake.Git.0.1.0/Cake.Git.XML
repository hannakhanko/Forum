<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Git</name>
    </assembly>
    <members>
        <member name="T:Cake.Git.GitAliases">
            <summary>
            Contains functionality for working with GIT using LibGit2 &amp; LibGit2Sharp
            </summary>
        </member>
        <member name="M:Cake.Git.GitAliases.GitCheckout(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,Cake.Core.IO.FilePath[])">
            <summary>
            Checkout file(s) using supplied commit or branch spec.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="committishOrBranchSpec">A revparse spec for the commit or branch to checkout paths from.</param>
            <param name="filePaths">Path to files to checkout.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitCheckout(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,Cake.Core.IO.FilePath[])">
            <summary>
            Checkout file.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="filePaths">Path to files to remove.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitAdd(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,Cake.Core.IO.FilePath[])">
            <summary>
            Add file to index.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="filePaths">Path to file(s) to add.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitClone(Cake.Core.ICakeContext,System.String,Cake.Core.IO.DirectoryPath)">
            <summary>
            Clone unauthenticated using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceUrl">URI for the remote repository.</param>
            <param name="workDirectoryPath">Local path to clone into.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitClone(Cake.Core.ICakeContext,System.String,Cake.Core.IO.DirectoryPath,System.String,System.String)">
            <summary>
            Clone authenticated using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="sourceUrl">URI for the remote repository.</param>
            <param name="workDirectoryPath">Local path to clone into.</param>
            <param name="username">Username used for authentication.</param>
            <param name="password">Password used for authentication.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns>The path to the created repository.</returns>
        </member>
        <member name="M:Cake.Git.GitAliases.GitCommit(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,System.String,System.String)">
            <summary>
            Commit using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="name">Name of committer.</param>
            <param name="email">Email of committer.</param>
            <param name="message">Commit message.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitInit(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath)">
            <summary>
            Init using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="initDirectoryPath">The path to the working folder when initializing a standard ".git" repository.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitLogTip(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath)">
            <summary>
            Get last commit
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitLog(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.Int32)">
            <summary>
            Get commit log.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="count">Number of commits to fetch.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitLog(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String)">
            <summary>
            Get commit from certain commit id up to current.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="sinceCommitId">Commit id to start fetching from.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitLogLookup(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String)">
            <summary>
            Get up to 15 commit logs.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="commitId">Commit id to lookup.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitPull(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,System.String)">
            <summary>
            Pull unauthenticated using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Repository path.</param>
            <param name="mergerName">The name of the merger.</param>
            <param name="mergerEmail">The email of the merger.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitPull(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Pull authenticating using default options.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Repository path.</param>
            <param name="mergerName">The name of the merger.</param>
            <param name="mergerEmail">The email of the merger.</param>
            <param name="username">Username used for authentication.</param>
            <param name="password">Password used for authentication.</param>
            <param name="remoteName">Name of remote to pull from.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitPush(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath)">
            <summary>
            Push all branches unauthenticated.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Repository path.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitPush(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,System.String)">
            <summary>
            Push all branches authenticated.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Repository path.</param>
            <param name="username">Username used for authentication.</param>
            <param name="password">Password used for authentication.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitPush(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.String,System.String,System.String)">
            <summary>
            Push specific branch authenticated.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Repository path.</param>
            <param name="username">Username used for authentication.</param>
            <param name="password">Password used for authentication.</param>
            <param name="branchName">Name of branch to push.</param>
            <returns>The path to the created repository.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cake.Git.GitAliases.GitRemove(Cake.Core.ICakeContext,Cake.Core.IO.DirectoryPath,System.Boolean,Cake.Core.IO.FilePath[])">
            <summary>
            Remove file(s) from index.
            </summary>
            <param name="context">The context.</param>
            <param name="repositoryDirectoryPath">Path to repository.</param>
            <param name="filePaths">Path to file(s) to remove.</param>
            <param name="removeFromWorkingDirectory">True to remove the files from the working directory, False otherwise.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cake.Git.GitCommit">
            <summary>
            Representation of a Git commit.
            </summary>
        </member>
        <member name="P:Cake.Git.GitCommit.Sha">
            <summary>
            Sha Id of commit.
            </summary>
        </member>
        <member name="P:Cake.Git.GitCommit.Author">
            <summary>
            Commit author.
            </summary>
        </member>
        <member name="P:Cake.Git.GitCommit.Committer">
            <summary>
            Commit comitter.
            </summary>
        </member>
        <member name="P:Cake.Git.GitCommit.Message">
            <summary>
            Commit message.
            </summary>
        </member>
        <member name="P:Cake.Git.GitCommit.MessageShort">
            <summary>
            Commit short message.
            </summary>
        </member>
        <member name="T:Cake.Git.GitMergeResult">
            <summary>
            Git repository merge operation result
            </summary>
        </member>
        <member name="P:Cake.Git.GitMergeResult.Commit">
            <summary>
            Merge commit.
            </summary>
        </member>
        <member name="P:Cake.Git.GitMergeResult.Status">
            <summary>
            Merge status
            </summary>
        </member>
        <member name="T:Cake.Git.GitMergeStatus">
            <summary>
             The status of what happened as a result of a merge.
            </summary>
        </member>
        <member name="F:Cake.Git.GitMergeStatus.UpToDate">
            <summary>
            Repository was up to date
            </summary>
        </member>
        <member name="F:Cake.Git.GitMergeStatus.FastForward">
            <summary>
            Repository was fast forward merged
            </summary>
        </member>
        <member name="F:Cake.Git.GitMergeStatus.NonFastForward">
            <summary>
            Repository was not fast forward merged
            </summary>
        </member>
        <member name="F:Cake.Git.GitMergeStatus.Conflicts">
            <summary>
            Repository encountered conflicts during merge
            </summary>
        </member>
        <member name="T:Cake.Git.GitSignature">
            <summary>
            Git Commit Author / Committer.
            </summary>
        </member>
        <member name="P:Cake.Git.GitSignature.Email">
            <summary>
            Email address of author / committer.
            </summary>
        </member>
        <member name="P:Cake.Git.GitSignature.Name">
            <summary>
            Name of author / commiter.
            </summary>
        </member>
        <member name="P:Cake.Git.GitSignature.When">
            <summary>
            When Committed / Authored
            </summary>
        </member>
        <member name="T:Cake.Git.NamespaceDoc">
            <summary>
            This namespace contains GIT aliases.
            </summary>
        </member>
    </members>
</doc>
